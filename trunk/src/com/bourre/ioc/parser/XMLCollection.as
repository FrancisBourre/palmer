/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ package com.bourre.ioc.parser {	import com.bourre.ioc.parser.factory.AbstractParserCollection;	import com.bourre.ioc.parser.factory.xml.DLLParser;	import com.bourre.ioc.parser.factory.xml.DisplayObjectParser;	import com.bourre.ioc.parser.factory.xml.ImportParser;	import com.bourre.ioc.parser.factory.xml.LoaderParser;	import com.bourre.ioc.parser.factory.xml.ObjectParser;	import com.bourre.ioc.parser.factory.xml.PathParser;	import com.bourre.ioc.parser.factory.xml.PreprocessorParser;	import com.bourre.ioc.parser.factory.xml.ResourceParser;	
	public class XMLCollection extends AbstractParserCollection	{		//--------------------------------------------------------------------		// Public API		//--------------------------------------------------------------------				public function XMLCollection(  )		{			super( );		}						//--------------------------------------------------------------------		// Protected methods		//--------------------------------------------------------------------				/**		 * 		 */		override protected function setParserList(  ) : void		{			oCollection.push( new PathParser( ) );						oCollection.push( new LoaderParser( ) );						oCollection.push( new ImportParser( ) );			oCollection.push( new PreprocessorParser( ) );						oCollection.push( getASPreProcessor( ) );						oCollection.push( new DLLParser( ) );			oCollection.push( new ResourceParser( ) );			oCollection.push( new DisplayObjectParser( ) );			oCollection.push( new ObjectParser( ) );		}	}}				
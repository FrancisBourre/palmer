<?xml version="1.0" encoding="UTF-8"?>
<pmd version="4.2.1" timestamp="Wed Sep 02 13:29:50 CEST 2009">
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/services/AMFService.as">
      <violation beginline="156" endline="156" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AMFService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="54" endline="54" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.services" class="AMFService.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/ASPreProcessorParser.as">
      <violation beginline="100" endline="100" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="ASPreProcessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="117" endline="117" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="ASPreProcessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/AbstractCommand.as">
      <violation beginline="52" endline="52" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.commands" class="AbstractCommand.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 17 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="52" endline="52" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.commands" class="AbstractCommand.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 22 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="210" endline="210" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.commands" class="AbstractCommand.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="235" endline="235" begincolumn="0" endcolumn="58" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.commands" class="AbstractCommand.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/display/AbstractDisplayLoader.as">
      <violation beginline="220" endline="220" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="AbstractDisplayLoader.as" externalInfoUrl="" priority="1">This parameter (value) of this function is not used. </violation>
      <violation beginline="229" endline="229" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="AbstractDisplayLoader.as" externalInfoUrl="" priority="1">This parameter (value) of this function is not used. </violation>
      <violation beginline="53" endline="53" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="AbstractDisplayLoader.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 12 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="53" endline="53" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="AbstractDisplayLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 16 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/AbstractLoader.as">
      <violation beginline="123" endline="123" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="263" endline="263" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="271" endline="271" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="336" endline="336" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="344" endline="344" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="516" endline="516" begincolumn="53" endcolumn="53" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">This parameter (context) of this function is not used. </violation>
      <violation beginline="516" endline="516" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">This parameter (request) of this function is not used. </violation>
      <violation beginline="530" endline="530" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="1">This parameter (owner) of this function is not used. </violation>
      <violation beginline="72" endline="72" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 27 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="72" endline="72" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 39 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="72" endline="72" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 11 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="83" endline="83" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="3">This method (registerLoaderToPool) should be private.. </violation>
      <violation beginline="98" endline="98" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="3">This method (unregisterLoaderFromPool) should be private.. </violation>
      <violation beginline="22" endline="22" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="211" endline="211" begincolumn="0" endcolumn="97" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="501" endline="501" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="AbstractLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/AbstractLocator.as">
      <violation beginline="89" endline="89" begincolumn="56" endcolumn="56" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="131" endline="131" begincolumn="76" endcolumn="76" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="193" endline="193" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="253" endline="253" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="290" endline="290" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="311" endline="311" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="345" endline="345" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="353" endline="353" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="529" endline="529" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="53" endline="53" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 21 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="53" endline="53" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 31 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="539" endline="539" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="539" endline="539" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="20" endline="20" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="59" endline="59" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="402" endline="402" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="478" endline="478" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="526" endline="526" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="AbstractLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/AbstractMediaStream.as">
      <violation beginline="130" endline="130" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media" class="AbstractMediaStream.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="138" endline="138" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media" class="AbstractMediaStream.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.media" class="AbstractMediaStream.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 16 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.media" class="AbstractMediaStream.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="268" endline="268" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.media" class="AbstractMediaStream.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="270" endline="270" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.media" class="AbstractMediaStream.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/model/AbstractModel.as">
      <violation beginline="38" endline="38" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="1">This type (net.pixlib.model.ModelEvent.onInitModelEVENT) is not found in the source path. </violation>
      <violation beginline="46" endline="46" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="1">This type (net.pixlib.model.ModelEvent.onReleaseModelEVENT) is not found in the source path. </violation>
      <violation beginline="184" endline="184" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="192" endline="192" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="46" endline="46" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="46" endline="46" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 17 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="55" endline="55" begincolumn="0" endcolumn="58" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="72" endline="72" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="101" endline="101" begincolumn="0" endcolumn="66" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="110" endline="110" begincolumn="0" endcolumn="107" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="159" endline="159" begincolumn="0" endcolumn="66" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="101" endline="101" begincolumn="0" endcolumn="66" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.model" class="AbstractModel.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/AbstractParserCollection.as">
      <violation beginline="96" endline="96" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="115" endline="115" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="116" endline="116" begincolumn="0" endcolumn="37" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="146" endline="146" begincolumn="0" endcolumn="37" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/AbstractParserCommand.as">
      <violation beginline="49" endline="49" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCommand.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="75" endline="75" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCommand.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="165" endline="165" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCommand.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCommand.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="189" endline="189" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCommand.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="191" endline="191" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCommand.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="29" endline="29" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="AbstractParserCommand.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/AbstractPlugin.as">
      <violation beginline="237" endline="237" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="253" endline="253" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="27" endline="27" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 19 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 24 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="52" endline="52" begincolumn="0" endcolumn="46" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="91" endline="91" begincolumn="0" endcolumn="46" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="99" endline="99" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="188" endline="188" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="287" endline="287" begincolumn="0" endcolumn="53" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="297" endline="297" begincolumn="0" endcolumn="53" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="299" endline="299" begincolumn="0" endcolumn="25" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="AbstractPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/services/AbstractService.as">
      <violation beginline="66" endline="66" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="71" endline="71" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="76" endline="76" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="101" endline="101" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="134" endline="134" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="139" endline="139" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="144" endline="144" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="150" endline="150" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">This parameter (helper) of this function is not used. </violation>
      <violation beginline="167" endline="167" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="181" endline="181" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 13 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="31" endline="31" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 22 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="37" endline="37" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="3">This method (isRegistered) should be private.. </violation>
      <violation beginline="42" endline="42" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="3">This method (register) should be private.. </violation>
      <violation beginline="54" endline="54" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="3">This method (unregister) should be private.. </violation>
      <violation beginline="67" endline="67" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.services" class="AbstractService.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_args). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/view/AbstractView.as">
      <violation beginline="358" endline="358" begincolumn="0" endcolumn="64" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.view" class="AbstractView.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/layout/AirLoggerLayout.as">
      <violation beginline="327" endline="327" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="1">This private method (onStatus) is used but its content is empty. </violation>
      <violation beginline="332" endline="332" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="1">This private method (onSecurityError) is used but its content is empty. </violation>
      <violation beginline="66" endline="66" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 13 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="66" endline="66" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 19 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="66" endline="66" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 10 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="119" endline="119" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aLogStack). </violation>
      <violation beginline="127" endline="127" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="129" endline="129" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="148" endline="148" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="307" endline="307" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="354" endline="354" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="160" endline="160" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="232" endline="232" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="AirLoggerLayout.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/ApplicationAssembler.as">
      <violation beginline="10" endline="10" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="ApplicationAssembler.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="ApplicationAssembler.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/ApplicationBroadcaster.as">
      <violation beginline="60" endline="60" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.events" class="ApplicationBroadcaster.as" externalInfoUrl="" priority="1">A constant field should be static (NO_CHANNEL). </violation>
      <violation beginline="66" endline="66" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.events" class="ApplicationBroadcaster.as" externalInfoUrl="" priority="1">A constant field should be static (SYSTEM_CHANNEL). </violation>
      <violation beginline="113" endline="113" begincolumn="82" endcolumn="82" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ApplicationBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="90" endline="90" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.events" class="ApplicationBroadcaster.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="94" endline="94" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.events" class="ApplicationBroadcaster.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="113" endline="113" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="net.pixlib.events" class="ApplicationBroadcaster.as" externalInfoUrl="" priority="3">This method is empty. This should be removed (getChannelDispatcher). This function is not needed</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/load/ApplicationLoader.as">
      <violation beginline="184" endline="184" begincolumn="57" endcolumn="57" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="331" endline="331" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="620" endline="620" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="653" endline="653" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="-1" endline="-1" begincolumn="-1" endcolumn="-1" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 32 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="58" endline="58" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 38 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="58" endline="58" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 46 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="113" endline="113" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="359" endline="359" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="214" endline="214" begincolumn="0" endcolumn="55" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="385" endline="385" begincolumn="0" endcolumn="119" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="655" endline="655" begincolumn="0" endcolumn="72" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="ApplicationLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/ArrayUtil.as">
      <violation beginline="40" endline="40" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="53" endline="53" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="73" endline="73" begincolumn="61" endcolumn="61" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="100" endline="100" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="120" endline="120" begincolumn="81" endcolumn="81" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="122" endline="122" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="135" endline="135" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="135" endline="135" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="162" endline="162" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="162" endline="162" begincolumn="89" endcolumn="89" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="189" endline="189" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="274" endline="274" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="1">This parameter (access) of this function is not used. </violation>
      <violation beginline="26" endline="26" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 11 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="26" endline="26" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="189" endline="189" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="3">This variable (temp) seems to be incorrectly named. Let your creativity flow.. </violation>
      <violation beginline="218" endline="218" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="3">This variable (tmp) seems to be incorrectly named. Let your creativity flow.. </violation>
      <violation beginline="55" endline="55" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="102" endline="102" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="122" endline="122" begincolumn="0" endcolumn="37" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="137" endline="137" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="164" endline="164" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="187" endline="187" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="188" endline="188" begincolumn="0" endcolumn="15" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="214" endline="214" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="239" endline="239" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="254" endline="254" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ArrayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/AttributeAsPropertyProcessor.as">
      <violation beginline="89" endline="89" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeAsPropertyProcessor.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="89" endline="89" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeAsPropertyProcessor.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="120" endline="120" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeAsPropertyProcessor.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="129" endline="129" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeAsPropertyProcessor.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="65" endline="65" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeAsPropertyProcessor.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aID). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/AttributeUtils.as">
      <violation beginline="25" endline="25" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeUtils.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="25" endline="25" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeUtils.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="116" endline="116" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeUtils.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="118" endline="118" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="AttributeUtils.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/runner/BasicApplicationRunner.as">
      <violation beginline="77" endline="77" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.runner" class="BasicApplicationRunner.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="78" endline="78" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.runner" class="BasicApplicationRunner.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/BasicEvent.as">
      <violation beginline="43" endline="43" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="BasicEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="64" endline="64" begincolumn="46" endcolumn="46" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="BasicEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="112" endline="112" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="BasicEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="119" endline="119" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="BasicEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="129" endline="129" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="BasicEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="139" endline="139" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="BasicEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/BasicStringifier.as">
      <violation beginline="42" endline="42" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="BasicStringifier.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/Batch.as">
      <violation beginline="125" endline="125" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Batch.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="146" endline="146" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Batch.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="147" endline="147" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Batch.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="158" endline="158" begincolumn="0" endcolumn="36" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Batch.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="167" endline="167" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Batch.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/BooleanEvent.as">
      <violation beginline="37" endline="37" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="BooleanEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="37" endline="37" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.events" class="BooleanEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="28" endline="28" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="BooleanEvent.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/Broadcaster.as">
      <violation beginline="45" endline="45" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="Broadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="59" endline="59" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="Broadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="86" endline="86" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="Broadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="97" endline="97" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="Broadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="145" endline="145" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="Broadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildArray.as">
      <violation beginline="34" endline="34" begincolumn="0" endcolumn="17" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildArray.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildClass.as">
      <violation beginline="35" endline="35" begincolumn="0" endcolumn="17" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildClass.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildDictionary.as">
      <violation beginline="49" endline="49" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildDictionary.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="32" endline="32" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildDictionary.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 29 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="36" endline="36" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildDictionary.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="45" endline="45" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildDictionary.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="49" endline="49" begincolumn="0" endcolumn="51" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildDictionary.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildFactory.as">
      <violation beginline="83" endline="83" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="45" endline="45" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFactory.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="47" endline="47" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFactory.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="43" endline="43" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildFunction.as">
      <violation beginline="46" endline="46" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFunction.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="33" endline="33" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFunction.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 28 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="37" endline="37" begincolumn="0" endcolumn="20" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFunction.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="40" endline="40" begincolumn="0" endcolumn="63" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildFunction.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildInstance.as">
      <violation beginline="55" endline="55" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildInstance.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildInt.as">
      <violation beginline="36" endline="36" begincolumn="0" endcolumn="24" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildInt.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildNumber.as">
      <violation beginline="36" endline="36" begincolumn="0" endcolumn="24" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildNumber.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildUint.as">
      <violation beginline="35" endline="35" begincolumn="0" endcolumn="24" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildUint.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/control/BuildXML.as">
      <violation beginline="42" endline="42" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.control" class="BuildXML.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/display/CSS.as">
      <violation beginline="199" endline="199" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="235" endline="235" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="252" endline="252" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="267" endline="267" begincolumn="71" endcolumn="71" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="269" endline="269" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="409" endline="409" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (field) of this function is not used. </violation>
      <violation beginline="419" endline="419" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (field) of this function is not used. </violation>
      <violation beginline="429" endline="429" begincolumn="76" endcolumn="76" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (field) of this function is not used. </violation>
      <violation beginline="437" endline="437" begincolumn="76" endcolumn="76" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (field) of this function is not used. </violation>
      <violation beginline="445" endline="445" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (field) of this function is not used. </violation>
      <violation beginline="454" endline="454" begincolumn="81" endcolumn="81" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (field) of this function is not used. </violation>
      <violation beginline="463" endline="463" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (tf) of this function is not used. </violation>
      <violation beginline="477" endline="477" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (field) of this function is not used. </violation>
      <violation beginline="492" endline="492" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (index) of this function is not used. </violation>
      <violation beginline="492" endline="492" begincolumn="56" endcolumn="56" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">This parameter (arr) of this function is not used. </violation>
      <violation beginline="492" endline="492" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 26 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="189" endline="189" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 38 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="198" endline="198" begincolumn="0" endcolumn="52" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="304" endline="304" begincolumn="0" endcolumn="40" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="325" endline="325" begincolumn="0" endcolumn="55" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="343" endline="343" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="372" endline="372" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.display" class="CSS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/encoding/CSSDeserializer.as">
      <violation beginline="70" endline="70" begincolumn="105" endcolumn="105" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="CSSDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="70" endline="70" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="CSSDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="70" endline="70" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="CSSDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="70" endline="70" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.encoding" class="CSSDeserializer.as" externalInfoUrl="" priority="1">This parameter (target) of this function is not used. </violation>
      <violation beginline="20" endline="20" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.encoding" class="CSSDeserializer.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/CSSLoader.as">
      <violation beginline="74" endline="74" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="CSSLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="56" endline="56" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.load" class="CSSLoader.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="21" endline="21" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="CSSLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/display/CSSLocator.as">
      <violation beginline="75" endline="75" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.display" class="CSSLocator.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="79" endline="79" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.display" class="CSSLocator.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/display/CSSStyleFormat.as">
      <violation beginline="29" endline="29" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.DynamicClass" ruleset="All Flex Rules" package="net.pixlib.display" class="CSSStyleFormat.as" externalInfoUrl="" priority="1">A class must not be dynamic. When using dynamic classes, you cannot control how the developer will use your class. It makes refactoring really difficult</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/Cancelable.as">
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.commands" class="Cancelable.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/ChannelBroadcaster.as">
      <violation beginline="176" endline="176" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="228" endline="228" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="284" endline="284" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="304" endline="304" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="334" endline="334" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="350" endline="350" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="67" endline="67" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="67" endline="67" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="87" endline="87" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 3 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="234" endline="234" begincolumn="0" endcolumn="69" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="253" endline="253" begincolumn="0" endcolumn="67" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="ChannelBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/ChannelExpert.as">
      <violation beginline="56" endline="56" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.plugin" class="ChannelExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="58" endline="58" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.plugin" class="ChannelExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="33" endline="33" begincolumn="0" endcolumn="36" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.plugin" class="ChannelExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="35" endline="35" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.plugin" class="ChannelExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/ChannelListener.as">
      <violation beginline="50" endline="50" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListener.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (arguments). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/ChannelListenerExpert.as">
      <violation beginline="62" endline="62" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListenerExpert.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="72" endline="72" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListenerExpert.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="47" endline="47" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListenerExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="51" endline="51" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListenerExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="18" endline="18" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListenerExpert.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="69" endline="69" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListenerExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="72" endline="72" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ChannelListenerExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/reflect/ClassInfo.as">
      <violation beginline="204" endline="204" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="244" endline="244" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="286" endline="286" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="785" endline="785" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="968" endline="968" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (index) of this function is not used. </violation>
      <violation beginline="968" endline="968" begincolumn="68" endcolumn="68" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (arr) of this function is not used. </violation>
      <violation beginline="978" endline="978" begincolumn="56" endcolumn="56" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (index) of this function is not used. </violation>
      <violation beginline="978" endline="978" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (arr) of this function is not used. </violation>
      <violation beginline="988" endline="988" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (index) of this function is not used. </violation>
      <violation beginline="988" endline="988" begincolumn="73" endcolumn="73" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (arr) of this function is not used. </violation>
      <violation beginline="998" endline="998" begincolumn="57" endcolumn="57" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (index) of this function is not used. </violation>
      <violation beginline="998" endline="998" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (arr) of this function is not used. </violation>
      <violation beginline="1003" endline="1003" begincolumn="57" endcolumn="57" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (index) of this function is not used. </violation>
      <violation beginline="1003" endline="1003" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="1">This parameter (arr) of this function is not used. </violation>
      <violation beginline="70" endline="70" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 26 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="70" endline="70" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 40 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="70" endline="70" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 12 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="101" endline="101" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aInterfaceList). </violation>
      <violation beginline="102" endline="102" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aSuperList). </violation>
      <violation beginline="104" endline="104" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aMethodList). </violation>
      <violation beginline="105" endline="105" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aAccessorList). </violation>
      <violation beginline="106" endline="106" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aPropertyList). </violation>
      <violation beginline="118" endline="118" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">If this field (LINEBREAK) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="125" endline="125" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">If this field (TAB) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="283" endline="283" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 27 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="300" endline="300" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="785" endline="785" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="787" endline="787" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="856" endline="856" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="867" endline="867" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="883" endline="883" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="894" endline="894" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="895" endline="895" begincolumn="77" endcolumn="77" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="895" endline="895" begincolumn="77" endcolumn="77" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="911" endline="911" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="923" endline="923" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="939" endline="939" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="950" endline="950" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="389" endline="389" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.switchrules.TooFewBrancheInSwitchStatement" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">There are too few branches in this switch statement (3 minimum, but 2 actual). Switch statements are designed for complex branches, and allow branches to share treatment. Using a switch for only 2 branches is ill advised, as switches are not as easy to understand as if. In this case, it's most likely is a good idea to use a if statement</violation>
      <violation beginline="465" endline="465" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.switchrules.TooFewBrancheInSwitchStatement" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">There are too few branches in this switch statement (3 minimum, but 2 actual). Switch statements are designed for complex branches, and allow branches to share treatment. Using a switch for only 2 branches is ill advised, as switches are not as easy to understand as if. In this case, it's most likely is a good idea to use a if statement</violation>
      <violation beginline="536" endline="536" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="538" endline="538" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.switchrules.TooFewBrancheInSwitchStatement" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">There are too few branches in this switch statement (3 minimum, but 2 actual). Switch statements are designed for complex branches, and allow branches to share treatment. Using a switch for only 2 branches is ill advised, as switches are not as easy to understand as if. In this case, it's most likely is a good idea to use a if statement</violation>
      <violation beginline="604" endline="604" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="606" endline="606" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.switchrules.TooFewBrancheInSwitchStatement" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">There are too few branches in this switch statement (3 minimum, but 2 actual). Switch statements are designed for complex branches, and allow branches to share treatment. Using a switch for only 2 branches is ill advised, as switches are not as easy to understand as if. In this case, it's most likely is a good idea to use a if statement</violation>
      <violation beginline="806" endline="806" begincolumn="0" endcolumn="57" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="821" endline="821" begincolumn="0" endcolumn="64" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="848" endline="848" begincolumn="0" endcolumn="45" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="875" endline="875" begincolumn="0" endcolumn="47" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="903" endline="903" begincolumn="0" endcolumn="47" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="933" endline="933" begincolumn="0" endcolumn="47" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="1023" endline="1023" begincolumn="0" endcolumn="54" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ClassInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/Collection.as">
      <violation beginline="91" endline="91" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Collection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="144" endline="144" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Collection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="163" endline="163" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Collection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="62" endline="62" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.collections" class="Collection.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/CommandEvent.as">
      <violation beginline="19" endline="19" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.events" class="CommandEvent.as" externalInfoUrl="" priority="1">This type (com.events.CommandEvent.onCommandStartEVENT) is not found in the source path. </violation>
      <violation beginline="27" endline="27" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.events" class="CommandEvent.as" externalInfoUrl="" priority="1">This type (com.events.CommandEvent.onCommandEndEVENT) is not found in the source path. </violation>
      <violation beginline="39" endline="39" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="CommandEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.events" class="CommandEvent.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/CommandFPS.as">
      <violation beginline="41" endline="41" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandFPS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="42" endline="42" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandFPS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="27" endline="27" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandFPS.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="27" endline="27" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandFPS.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 21 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="101" endline="101" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandFPS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="102" endline="102" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandFPS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="195" endline="195" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandFPS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/CommandMS.as">
      <violation beginline="39" endline="39" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="103" endline="103" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="165" endline="165" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="205" endline="205" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 20 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="80" endline="80" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="102" endline="102" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="103" endline="103" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="165" endline="165" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="205" endline="205" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="CommandMS.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/Constructor.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Constructor.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="24" endline="24" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Constructor.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="29" endline="29" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Constructor.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (arguments). </violation>
      <violation beginline="35" endline="35" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Constructor.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="27" endline="27" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Constructor.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/ConstructorExpert.as">
      <violation beginline="61" endline="61" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ConstructorExpert.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="46" endline="46" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ConstructorExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="50" endline="50" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ConstructorExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="21" endline="21" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ConstructorExpert.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="61" endline="61" begincolumn="0" endcolumn="61" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ConstructorExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/core/ContextNameList.as">
      <violation beginline="86" endline="86" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="91" endline="91" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 23 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 20 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="30" endline="30" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (BEANS) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="31" endline="31" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (PREPROCESSOR) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="32" endline="32" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (PROPERTY) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="33" endline="33" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (ARGUMENT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="34" endline="34" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (ROOT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="35" endline="35" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (APPLICATION_LOADER) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="36" endline="36" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (VAR) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="37" endline="37" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (LIB) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="38" endline="38" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (DLL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="39" endline="39" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (METHOD_CALL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="40" endline="40" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (LISTEN) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="41" endline="41" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (ITEM) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="42" endline="42" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (KEY) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="43" endline="43" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (VALUE) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="44" endline="44" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (INCLUDE) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="45" endline="45" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (IMPORT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="46" endline="46" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (RSC) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="47" endline="47" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">If this field (EVENT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="57" endline="57" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="59" endline="59" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextNameList.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/ContextParser.as">
      <violation beginline="37" endline="37" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParser.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="76" endline="76" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParser.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="84" endline="84" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParser.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="92" endline="92" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParser.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="47" endline="47" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParser.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="153" endline="153" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/ContextParserEvent.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParserEvent.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="40" endline="40" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParserEvent.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="58" endline="58" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser" class="ContextParserEvent.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/ContextProcessor.as">
      <violation beginline="39" endline="39" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="ContextProcessor.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="39" endline="39" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="ContextProcessor.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/core/ContextTypeList.as">
      <violation beginline="23" endline="23" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 17 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="23" endline="23" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 17 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="25" endline="25" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (DEFAULT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="26" endline="26" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (STRING) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="27" endline="27" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (NUMBER) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="28" endline="28" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (INT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="29" endline="29" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (UINT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="30" endline="30" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (BOOLEAN) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="31" endline="31" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (ARRAY) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="32" endline="32" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (OBJECT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="33" endline="33" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (INSTANCE) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="34" endline="34" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (SPRITE) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="35" endline="35" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (MOVIECLIP) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="36" endline="36" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (TEXTFIELD) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="37" endline="37" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (NULL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="38" endline="38" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (DICTIONARY) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="39" endline="39" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (CLASS) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="40" endline="40" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (XML) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="41" endline="41" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">If this field (FUNCTION) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="43" endline="43" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="45" endline="45" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="ContextTypeList.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/CoreFactory.as">
      <violation beginline="85" endline="85" begincolumn="149" endcolumn="149" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="102" endline="102" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="108" endline="108" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="182" endline="182" begincolumn="73" endcolumn="73" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="190" endline="190" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="190" endline="190" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build0) does not seem to be used. </violation>
      <violation beginline="191" endline="191" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="191" endline="191" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build1) does not seem to be used. </violation>
      <violation beginline="191" endline="191" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="192" endline="192" begincolumn="56" endcolumn="56" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="192" endline="192" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build2) does not seem to be used. </violation>
      <violation beginline="192" endline="192" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="192" endline="192" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="193" endline="193" begincolumn="61" endcolumn="61" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="193" endline="193" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build3) does not seem to be used. </violation>
      <violation beginline="193" endline="193" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="193" endline="193" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="193" endline="193" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="194" endline="194" begincolumn="66" endcolumn="66" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="194" endline="194" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build4) does not seem to be used. </violation>
      <violation beginline="194" endline="194" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="194" endline="194" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="194" endline="194" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="194" endline="194" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="195" endline="195" begincolumn="71" endcolumn="71" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="195" endline="195" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build5) does not seem to be used. </violation>
      <violation beginline="195" endline="195" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="195" endline="195" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="195" endline="195" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="195" endline="195" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="195" endline="195" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="196" endline="196" begincolumn="76" endcolumn="76" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="196" endline="196" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build6) does not seem to be used. </violation>
      <violation beginline="196" endline="196" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="196" endline="196" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="196" endline="196" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="196" endline="196" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="196" endline="196" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="196" endline="196" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="197" endline="197" begincolumn="81" endcolumn="81" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="197" endline="197" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build7) does not seem to be used. </violation>
      <violation beginline="197" endline="197" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="197" endline="197" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="197" endline="197" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="197" endline="197" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="197" endline="197" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="197" endline="197" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="197" endline="197" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="86" endcolumn="86" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="198" endline="198" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build8) does not seem to be used. </violation>
      <violation beginline="198" endline="198" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="198" endline="198" begincolumn="79" endcolumn="79" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="91" endcolumn="91" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="199" endline="199" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build9) does not seem to be used. </violation>
      <violation beginline="199" endline="199" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="79" endcolumn="79" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="199" endline="199" begincolumn="84" endcolumn="84" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="98" endcolumn="98" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="200" endline="200" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build10) does not seem to be used. </violation>
      <violation beginline="200" endline="200" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="200" endline="200" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="104" endcolumn="104" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="201" endline="201" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build11) does not seem to be used. </violation>
      <violation beginline="201" endline="201" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="201" endline="201" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="110" endcolumn="110" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="202" endline="202" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build12) does not seem to be used. </violation>
      <violation beginline="202" endline="202" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="202" endline="202" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="116" endcolumn="116" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="203" endline="203" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build13) does not seem to be used. </violation>
      <violation beginline="203" endline="203" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="203" endline="203" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="122" endcolumn="122" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="204" endline="204" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build14) does not seem to be used. </violation>
      <violation beginline="204" endline="204" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="204" endline="204" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="128" endcolumn="128" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="205" endline="205" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build15) does not seem to be used. </violation>
      <violation beginline="205" endline="205" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="205" endline="205" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="134" endcolumn="134" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="206" endline="206" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build16) does not seem to be used. </violation>
      <violation beginline="206" endline="206" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="140" endcolumn="140" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="207" endline="207" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build17) does not seem to be used. </violation>
      <violation beginline="207" endline="207" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="207" endline="207" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="146" endcolumn="146" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="208" endline="208" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build18) does not seem to be used. </violation>
      <violation beginline="208" endline="208" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="208" endline="208" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="152" endcolumn="152" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="209" endline="209" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build19) does not seem to be used. </violation>
      <violation beginline="209" endline="209" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="209" endline="209" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="158" endcolumn="158" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="210" endline="210" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build20) does not seem to be used. </violation>
      <violation beginline="210" endline="210" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="210" endline="210" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="164" endcolumn="164" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="211" endline="211" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build21) does not seem to be used. </violation>
      <violation beginline="211" endline="211" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="211" endline="211" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="170" endcolumn="170" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="212" endline="212" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build22) does not seem to be used. </violation>
      <violation beginline="212" endline="212" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="212" endline="212" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="176" endcolumn="176" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="213" endline="213" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build23) does not seem to be used. </violation>
      <violation beginline="213" endline="213" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="213" endline="213" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="182" endcolumn="182" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="214" endline="214" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build24) does not seem to be used. </violation>
      <violation beginline="214" endline="214" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="214" endline="214" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="188" endcolumn="188" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="215" endline="215" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build25) does not seem to be used. </violation>
      <violation beginline="215" endline="215" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="215" endline="215" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="194" endcolumn="194" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="216" endline="216" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build26) does not seem to be used. </violation>
      <violation beginline="216" endline="216" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="216" endline="216" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="200" endcolumn="200" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="217" endline="217" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build27) does not seem to be used. </violation>
      <violation beginline="217" endline="217" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="217" endline="217" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="206" endcolumn="206" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="218" endline="218" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build28) does not seem to be used. </violation>
      <violation beginline="218" endline="218" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="218" endline="218" begincolumn="198" endcolumn="198" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="212" endcolumn="212" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="219" endline="219" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build29) does not seem to be used. </violation>
      <violation beginline="219" endline="219" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="198" endcolumn="198" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="219" endline="219" begincolumn="204" endcolumn="204" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="218" endcolumn="218" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="220" endline="220" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">This private method (_build30) does not seem to be used. </violation>
      <violation beginline="220" endline="220" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="198" endcolumn="198" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="204" endcolumn="204" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="220" endline="220" begincolumn="210" endcolumn="210" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="261" endline="261" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="280" endline="280" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="285" endline="285" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="327" endline="327" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="333" endline="333" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="363" endline="363" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="368" endline="368" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="380" endline="380" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 19 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 51 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="85" endline="85" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 78 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="172" endline="172" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_A). </violation>
      <violation beginline="190" endline="190" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="191" endline="191" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="191" endline="191" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="192" endline="192" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="192" endline="192" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="192" endline="192" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="193" endline="193" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="193" endline="193" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="193" endline="193" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="193" endline="193" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="194" endline="194" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="194" endline="194" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="194" endline="194" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="194" endline="194" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="194" endline="194" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="194" endline="194" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="195" endline="195" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="195" endline="195" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="195" endline="195" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="195" endline="195" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="195" endline="195" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="195" endline="195" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="195" endline="195" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="196" endline="196" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 7 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="196" endline="196" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="196" endline="196" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="196" endline="196" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="196" endline="196" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="196" endline="196" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="196" endline="196" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="196" endline="196" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 8 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="197" endline="197" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="197" endline="197" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 9 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="198" endline="198" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="79" endcolumn="79" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="198" endline="198" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 10 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="199" endline="199" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="69" endcolumn="69" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="79" endcolumn="79" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="84" endcolumn="84" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="199" endline="199" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 11 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="200" endline="200" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="200" endline="200" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 12 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="201" endline="201" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="201" endline="201" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 13 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="202" endline="202" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="202" endline="202" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 14 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="203" endline="203" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="203" endline="203" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 15 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="204" endline="204" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="204" endline="204" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 16 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="205" endline="205" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="205" endline="205" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 17 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="206" endline="206" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="206" endline="206" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 18 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="207" endline="207" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="207" endline="207" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 19 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="208" endline="208" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="208" endline="208" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 20 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="209" endline="209" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="209" endline="209" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 21 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="210" endline="210" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="210" endline="210" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 22 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="211" endline="211" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="211" endline="211" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 23 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="212" endline="212" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="212" endline="212" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 24 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="213" endline="213" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="213" endline="213" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 25 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="214" endline="214" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="214" endline="214" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 26 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="215" endline="215" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="215" endline="215" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 27 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="216" endline="216" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="216" endline="216" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 28 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="217" endline="217" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="217" endline="217" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 29 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="218" endline="218" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="198" endcolumn="198" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="218" endline="218" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 30 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="219" endline="219" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="198" endcolumn="198" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="204" endcolumn="204" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="219" endline="219" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 31 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="220" endline="220" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="70" endcolumn="70" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="75" endcolumn="75" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="90" endcolumn="90" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="96" endcolumn="96" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="102" endcolumn="102" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="108" endcolumn="108" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="114" endcolumn="114" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="120" endcolumn="120" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="126" endcolumn="126" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="132" endcolumn="132" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="138" endcolumn="138" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="144" endcolumn="144" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="150" endcolumn="150" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="162" endcolumn="162" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="168" endcolumn="168" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="174" endcolumn="174" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="180" endcolumn="180" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="186" endcolumn="186" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="192" endcolumn="192" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="198" endcolumn="198" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="204" endcolumn="204" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="210" endcolumn="210" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="220" endline="220" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="238" endline="238" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="240" endline="240" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="102" endline="102" begincolumn="0" endcolumn="18" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="108" endline="108" begincolumn="0" endcolumn="20" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="204" endline="204" begincolumn="0" endcolumn="200" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 200 actually). </violation>
      <violation beginline="205" endline="205" begincolumn="0" endcolumn="210" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 210 actually). </violation>
      <violation beginline="206" endline="206" begincolumn="0" endcolumn="220" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 220 actually). </violation>
      <violation beginline="207" endline="207" begincolumn="0" endcolumn="230" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 230 actually). </violation>
      <violation beginline="208" endline="208" begincolumn="0" endcolumn="240" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 240 actually). </violation>
      <violation beginline="209" endline="209" begincolumn="0" endcolumn="250" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 250 actually). </violation>
      <violation beginline="210" endline="210" begincolumn="0" endcolumn="260" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 260 actually). </violation>
      <violation beginline="211" endline="211" begincolumn="0" endcolumn="270" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 270 actually). </violation>
      <violation beginline="212" endline="212" begincolumn="0" endcolumn="280" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 280 actually). </violation>
      <violation beginline="213" endline="213" begincolumn="0" endcolumn="290" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 290 actually). </violation>
      <violation beginline="214" endline="214" begincolumn="0" endcolumn="300" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 300 actually). </violation>
      <violation beginline="215" endline="215" begincolumn="0" endcolumn="310" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 310 actually). </violation>
      <violation beginline="216" endline="216" begincolumn="0" endcolumn="320" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 320 actually). </violation>
      <violation beginline="217" endline="217" begincolumn="0" endcolumn="330" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 330 actually). </violation>
      <violation beginline="218" endline="218" begincolumn="0" endcolumn="340" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 340 actually). </violation>
      <violation beginline="219" endline="219" begincolumn="0" endcolumn="350" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 350 actually). </violation>
      <violation beginline="220" endline="220" begincolumn="0" endcolumn="360" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 360 actually). </violation>
      <violation beginline="225" endline="225" begincolumn="0" endcolumn="28" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="336" endline="336" begincolumn="0" endcolumn="46" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="340" endline="340" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="341" endline="341" begincolumn="0" endcolumn="28" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/CoreFactoryEvent.as">
      <violation beginline="30" endline="30" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactoryEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="32" endline="32" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactoryEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="44" endline="44" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactoryEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/CoreFactoryListener.as">
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.core" class="CoreFactoryListener.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/video/CuePoint.as">
      <violation beginline="86" endline="86" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePoint.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="73" endline="73" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePoint.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (parameters). </violation>
      <violation beginline="86" endline="86" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePoint.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/video/CuePointEvent.as">
      <violation beginline="71" endline="71" begincolumn="71" endcolumn="71" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePointEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/video/CuePointManager.as">
      <violation beginline="112" endline="112" begincolumn="0" endcolumn="43" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePointManager.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="144" endline="144" begincolumn="0" endcolumn="21" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePointManager.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="174" endline="174" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePointManager.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="237" endline="237" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePointManager.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="257" endline="257" begincolumn="0" endcolumn="98" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="CuePointManager.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/DLLParser.as">
      <violation beginline="20" endline="20" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="DLLParser.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="21" endline="21" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="DLLParser.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="47" endline="47" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="DLLParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/DefaultApplicationAssembler.as">
      <violation beginline="134" endline="134" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="141" endline="141" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="142" endline="142" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="172" endline="172" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="-1" endline="-1" begincolumn="-1" endcolumn="-1" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 17 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="41" endline="41" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 11 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="41" endline="41" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="99" endline="99" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="111" endline="111" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="124" endline="124" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 29 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="124" endline="124" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="145" endline="145" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="173" endline="173" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="18" endline="18" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="132" endline="132" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="133" endline="133" begincolumn="0" endcolumn="16" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="134" endline="134" begincolumn="0" endcolumn="19" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="153" endline="153" begincolumn="0" endcolumn="122" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="169" endline="169" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="172" endline="172" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="173" endline="173" begincolumn="0" endcolumn="87" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="210" endline="210" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="211" endline="211" begincolumn="0" endcolumn="23" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler" class="DefaultApplicationAssembler.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/runner/DefaultApplicationRunner.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.runner" class="DefaultApplicationRunner.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 12 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.runner" class="DefaultApplicationRunner.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 18 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="221" endline="221" begincolumn="0" endcolumn="36" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.runner" class="DefaultApplicationRunner.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="222" endline="222" begincolumn="0" endcolumn="45" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.runner" class="DefaultApplicationRunner.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="223" endline="223" begincolumn="0" endcolumn="23" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.runner" class="DefaultApplicationRunner.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/builder/DefaultDisplayObjectBuilder.as">
      <violation beginline="67" endline="67" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="74" endline="74" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="81" endline="81" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="88" endline="88" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="95" endline="95" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="102" endline="102" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="109" endline="109" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="116" endline="116" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="123" endline="123" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="130" endline="130" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="137" endline="137" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="144" endline="144" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="151" endline="151" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This type (net.pixlib.ioc.assembler.displayobject.DisplayObjectBuilderEvent) is not found in the source path. </violation>
      <violation beginline="243" endline="243" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="244" endline="244" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="316" endline="316" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.component.AddChildNotInCreateChildren" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">You must add child only inside the createChildren method. </violation>
      <violation beginline="462" endline="462" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="528" endline="528" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="536" endline="536" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="544" endline="544" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This parameter (listener) of this function is not used. </violation>
      <violation beginline="552" endline="552" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">This parameter (listener) of this function is not used. </violation>
      <violation beginline="625" endline="625" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.component.AddChildNotInCreateChildren" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="1">You must add child only inside the createChildren method. </violation>
      <violation beginline="-1" endline="-1" begincolumn="-1" endcolumn="-1" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 35 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="151" endline="151" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 36 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="151" endline="151" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 42 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="151" endline="151" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="184" endline="184" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="608" endline="608" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 26 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="698" endline="698" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="698" endline="698" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="700" endline="700" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="700" endline="700" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="704" endline="704" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="704" endline="704" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="26" endline="26" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="27" endline="27" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="28" endline="28" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="29" endline="29" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="30" endline="30" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="277" endline="277" begincolumn="0" endcolumn="65" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="308" endline="308" begincolumn="0" endcolumn="75" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="461" endline="461" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="604" endline="604" begincolumn="0" endcolumn="99" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="712" endline="712" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DefaultDisplayObjectBuilder.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/Delegate.as">
      <violation beginline="184" endline="184" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.commands" class="Delegate.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.commands" class="Delegate.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="39" endline="39" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.commands" class="Delegate.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_a). </violation>
      <violation beginline="38" endline="38" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Delegate.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="39" endline="39" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Delegate.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/encoding/Deserializer.as">
      <violation beginline="34" endline="34" begincolumn="99" endcolumn="99" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="Deserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="34" endline="34" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="Deserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="34" endline="34" begincolumn="53" endcolumn="53" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="Deserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/DictionaryItem.as">
      <violation beginline="14" endline="14" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="DictionaryItem.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="15" endline="15" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="DictionaryItem.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="DictionaryItem.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
      <violation beginline="3" endline="3" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="DictionaryItem.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/structures/Dimension.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.structures" class="Dimension.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 11 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/DimensionEvent.as">
      <violation beginline="50" endline="50" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="DimensionEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="50" endline="50" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.events" class="DimensionEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="18" endline="18" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.events" class="DimensionEvent.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/encoding/DisplayDeserializer.as">
      <violation beginline="53" endline="53" begincolumn="105" endcolumn="105" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="DisplayDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="53" endline="53" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="DisplayDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="53" endline="53" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="DisplayDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="53" endline="53" begincolumn="83" endcolumn="83" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.encoding" class="DisplayDeserializer.as" externalInfoUrl="" priority="1">This parameter (key) of this function is not used. </violation>
      <violation beginline="53" endline="53" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.encoding" class="DisplayDeserializer.as" externalInfoUrl="" priority="1">This parameter (target) of this function is not used. </violation>
      <violation beginline="19" endline="19" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.encoding" class="DisplayDeserializer.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="57" endline="57" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="DisplayDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/display/DisplayLoader.as">
      <violation beginline="50" endline="50" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/display/DisplayLoaderInfo.as">
      <violation beginline="29" endline="29" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderInfo.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="29" endline="29" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderInfo.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 14 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="73" endline="73" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderInfo.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 14 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="40" endline="40" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/display/DisplayLoaderProxy.as">
      <violation beginline="43" endline="43" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderProxy.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderProxy.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 13 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderProxy.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="19" endline="19" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.display" class="DisplayLoaderProxy.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/builder/DisplayObjectBuilder.as">
      <violation beginline="123" endline="123" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectBuilder.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="134" endline="134" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectBuilder.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectBuilder.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="18" endline="18" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectBuilder.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/builder/DisplayObjectEvent.as">
      <violation beginline="56" endline="56" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectEvent.as" externalInfoUrl="" priority="3">If this field (onBuildDisplayObjectEVENT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="56" endline="56" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectEvent.as" externalInfoUrl="" priority="3">No public variables should be inside a custom event. This variable (onBuildDisplayObjectEVENT) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/builder/DisplayObjectInfo.as">
      <violation beginline="27" endline="27" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectInfo.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 11 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="27" endline="27" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectInfo.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="36" endline="36" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectInfo.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aChilds). </violation>
      <violation beginline="38" endline="38" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectInfo.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="30" endline="30" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="83" endline="83" begincolumn="0" endcolumn="24" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.builder" class="DisplayObjectInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/DisplayObjectParser.as">
      <violation beginline="88" endline="88" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="DisplayObjectParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="108" endline="108" begincolumn="0" endcolumn="222" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="DisplayObjectParser.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 222 actually). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/DisplayUtil.as">
      <violation beginline="242" endline="242" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="267" endline="267" begincolumn="136" endcolumn="136" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="275" endline="275" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.component.AddChildNotInCreateChildren" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="1">You must add child only inside the createChildren method. </violation>
      <violation beginline="38" endline="38" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="91" endline="91" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="149" endline="149" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="149" endline="149" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="149" endline="149" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="220" endline="220" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="225" endline="225" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="133" endline="133" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="134" endline="134" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="164" endline="164" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="165" endline="165" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="198" endline="198" begincolumn="0" endcolumn="63" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="DisplayUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/DynBasicEvent.as">
      <violation beginline="35" endline="35" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.DynamicClass" ruleset="All Flex Rules" package="net.pixlib.events" class="DynBasicEvent.as" externalInfoUrl="" priority="1">A class must not be dynamic. When using dynamic classes, you cannot control how the developer will use your class. It makes refactoring really difficult</violation>
      <violation beginline="50" endline="50" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="DynBasicEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/reflect/ElementInfo.as">
      <violation beginline="76" endline="76" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ElementInfo.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="ElementInfo.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/EventBroadcaster.as">
      <violation beginline="86" endline="86" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="107" endline="107" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="164" endline="164" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="226" endline="226" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="261" endline="261" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="295" endline="295" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="327" endline="327" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="382" endline="382" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="448" endline="448" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="503" endline="503" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="560" endline="560" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="566" endline="566" begincolumn="53" endcolumn="53" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="575" endline="575" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="81" endline="81" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="81" endline="81" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 19 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="81" endline="81" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="171" endline="171" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="171" endline="171" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="265" endline="265" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="339" endline="339" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="339" endline="339" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="339" endline="339" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="391" endline="391" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="525" endline="525" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="525" endline="525" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="525" endline="525" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="161" endline="161" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="206" endline="206" begincolumn="0" endcolumn="47" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="297" endline="297" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="386" endline="386" begincolumn="0" endcolumn="55" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="457" endline="457" begincolumn="0" endcolumn="58" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="498" endline="498" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="499" endline="499" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="570" endline="570" begincolumn="0" endcolumn="53" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="579" endline="579" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="580" endline="580" begincolumn="0" endcolumn="53" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="583" endline="583" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="584" endline="584" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/EventCallbackAdapter.as">
      <violation beginline="37" endline="37" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="40" endline="40" begincolumn="86" endcolumn="86" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="107" endline="107" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="112" endline="112" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 13 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 14 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="38" endline="38" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_a). </violation>
      <violation beginline="40" endline="40" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 3 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="38" endline="38" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="119" endline="119" begincolumn="0" endcolumn="20" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="151" endline="151" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="152" endline="152" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="EventCallbackAdapter.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/EventChannel.as">
      <violation beginline="42" endline="42" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.events" class="EventChannel.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/FileLoader.as">
      <violation beginline="73" endline="73" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.load" class="FileLoader.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/layout/FirebugLayout.as">
      <violation beginline="166" endline="166" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="FirebugLayout.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="118" endline="118" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="FirebugLayout.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="144" endline="144" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="FirebugLayout.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="160" endline="160" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="FirebugLayout.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="175" endline="175" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="FirebugLayout.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="183" endline="183" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="FirebugLayout.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="185" endline="185" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="FirebugLayout.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/FlashVars.as">
      <violation beginline="93" endline="93" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="106" endline="106" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="120" endline="120" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="168" endline="168" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="187" endline="187" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="206" endline="206" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="221" endline="221" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="239" endline="239" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="263" endline="263" begincolumn="57" endcolumn="57" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="263" endline="263" begincolumn="46" endcolumn="46" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="271" endline="271" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="271" endline="271" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="282" endline="282" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="290" endline="290" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="36" endline="36" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="36" endline="36" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 18 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="303" endline="303" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="305" endline="305" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="168" endline="168" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="187" endline="187" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="206" endline="206" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="221" endline="221" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="239" endline="239" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="FlashVars.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/FrontController.as">
      <violation beginline="93" endline="93" begincolumn="58" endcolumn="58" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="286" endline="286" begincolumn="57" endcolumn="57" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="288" endline="288" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="338" endline="338" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="342" endline="342" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="54" endline="54" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 12 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="54" endline="54" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="70" endline="70" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="286" endline="286" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 30 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="375" endline="375" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="3">This method is empty. This should be removed (toString). This function is not needed</violation>
      <violation beginline="288" endline="288" begincolumn="0" endcolumn="18" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="342" endline="342" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="FrontController.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/GraphicLoader.as">
      <violation beginline="94" endline="94" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.component.AddChildNotInCreateChildren" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="1">You must add child only inside the createChildren method. </violation>
      <violation beginline="98" endline="98" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.component.AddChildNotInCreateChildren" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="1">You must add child only inside the createChildren method. </violation>
      <violation beginline="125" endline="125" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="130" endline="130" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.component.AddChildNotInCreateChildren" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="1">You must add child only inside the createChildren method. </violation>
      <violation beginline="209" endline="209" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 12 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="145" endline="145" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.load" class="GraphicLoader.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/structures/Grid.as">
      <violation beginline="68" endline="68" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="92" endline="92" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="164" endline="164" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="246" endline="246" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="257" endline="257" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="333" endline="333" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="383" endline="383" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">This parameter (c) of this function is not used. </violation>
      <violation beginline="420" endline="420" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="505" endline="505" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="517" endline="517" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="517" endline="517" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">This parameter (o) of this function is not used. </violation>
      <violation beginline="546" endline="546" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="645" endline="645" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="682" endline="682" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="777" endline="777" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="794" endline="794" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="798" endline="798" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="815" endline="815" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="837" endline="837" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="63" endline="63" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 30 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="63" endline="63" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 31 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="67" endline="67" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aContent). </violation>
      <violation beginline="90" endline="90" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 4 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="671" endline="671" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="729" endline="729" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="922" endline="922" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="168" endline="168" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="189" endline="189" begincolumn="0" endcolumn="22" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="190" endline="190" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="205" endline="205" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="206" endline="206" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="253" endline="253" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="257" endline="257" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="329" endline="329" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="330" endline="330" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="333" endline="333" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="373" endline="373" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="416" endline="416" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="457" endline="457" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="458" endline="458" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="500" endline="500" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="501" endline="501" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="505" endline="505" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="686" endline="686" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="762" endline="762" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="763" endline="763" begincolumn="0" endcolumn="45" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="764" endline="764" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="880" endline="880" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="881" endline="881" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="884" endline="884" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="925" endline="925" begincolumn="0" endcolumn="54" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Grid.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/services/HTTPService.as">
      <violation beginline="167" endline="167" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="HTTPService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="193" endline="193" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.services" class="HTTPService.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="55" endline="55" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.services" class="HTTPService.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/HashCodeFactory.as">
      <violation beginline="50" endline="50" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="HashCodeFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="64" endline="64" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="HashCodeFactory.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="37" endline="37" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="HashCodeFactory.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/HashMap.as">
      <violation beginline="74" endline="74" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="HashMap.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="300" endline="300" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="HashMap.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="312" endline="312" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="HashMap.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/core/IDExpert.as">
      <violation beginline="30" endline="30" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.core" class="IDExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/ImportExpert.as">
      <violation beginline="69" endline="69" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ImportExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="73" endline="73" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ImportExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/ImportParser.as">
      <violation beginline="68" endline="68" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 14 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="152" endline="152" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="152" endline="152" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="158" endline="158" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="160" endline="160" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="283" endline="283" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="283" endline="283" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="147" endline="147" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="154" endline="154" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="158" endline="158" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ImportParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/Iterator.as">
      <violation beginline="43" endline="43" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Iterator.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/LibParser.as">
      <violation beginline="71" endline="71" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="LibParser.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="71" endline="71" begincolumn="101" endcolumn="101" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="LibParser.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="71" endline="71" begincolumn="124" endcolumn="124" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="LibParser.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="20" endline="20" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="LibParser.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="21" endline="21" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="LibParser.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="62" endline="62" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="LibParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/Loader.as">
      <violation beginline="120" endline="120" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="Loader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="125" endline="125" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="Loader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="141" endline="141" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="Loader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="148" endline="148" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="Loader.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="29" endline="29" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="Loader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 22 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/LoaderEvent.as">
      <violation beginline="41" endline="41" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderEvent.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="213" endline="213" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/LoaderLocator.as">
      <violation beginline="649" endline="649" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="674" endline="674" begincolumn="85" endcolumn="85" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="82" endline="82" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 37 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="685" endline="685" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="689" endline="689" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="22" endline="22" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="132" endline="132" begincolumn="0" endcolumn="46" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="154" endline="154" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="648" endline="648" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/LoaderLocatorEvent.as">
      <violation beginline="42" endline="42" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.load" class="LoaderLocatorEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/Locator.as">
      <violation beginline="59" endline="59" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="Locator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/LocatorEvent.as">
      <violation beginline="109" endline="109" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="LocatorEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="123" endline="123" begincolumn="80" endcolumn="80" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="LocatorEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="159" endline="159" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="LocatorEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="123" endline="123" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.core" class="LocatorEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="19" endline="19" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.core" class="LocatorEvent.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="109" endline="109" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.core" class="LocatorEvent.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/Log.as">
      <violation beginline="37" endline="37" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="37" endline="37" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="47" endline="47" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="47" endline="47" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="57" endline="57" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="57" endline="57" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="67" endline="67" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="67" endline="67" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="77" endline="77" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="77" endline="77" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Log.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/LogEvent.as">
      <violation beginline="65" endline="65" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="72" endline="72" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="93" endline="93" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="93" endline="93" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="59" endline="59" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="3">No public variables should be inside a custom event. This variable (level) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
      <violation beginline="65" endline="65" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="3">No public variables should be inside a custom event. This variable (message) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
      <violation beginline="72" endline="72" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="3">No public variables should be inside a custom event. This variable (logTarget) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
      <violation beginline="80" endline="80" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="net.pixlib.log" class="LogEvent.as" externalInfoUrl="" priority="3">No public variables should be inside a custom event. This variable (channel) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/Logger.as">
      <violation beginline="35" endline="35" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">This type (net.pixlib.log.LogEvent.onLogEVENT) is not found in the source path. </violation>
      <violation beginline="60" endline="60" begincolumn="2" endcolumn="2" rule="adobe.ac.pmd.rules.event.UnboundTypeInMetadata" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">This type (net.pixlib.log.LogEvent.onClearEVENT) is not found in the source path. </violation>
      <violation beginline="275" endline="275" begincolumn="88" endcolumn="88" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="275" endline="275" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="293" endline="293" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="293" endline="293" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="311" endline="311" begincolumn="71" endcolumn="71" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="311" endline="311" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="329" endline="329" begincolumn="71" endcolumn="71" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="329" endline="329" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="347" endline="347" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="347" endline="347" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="365" endline="365" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="365" endline="365" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="60" endline="60" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 18 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="60" endline="60" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 18 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="384" endline="384" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="386" endline="386" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log" class="Logger.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/layout/LuminicBoxLayout.as">
      <violation beginline="77" endline="77" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="LuminicBoxLayout.as" externalInfoUrl="" priority="1">A constant field should be static (LOCALCONNECTION_ID). </violation>
      <violation beginline="82" endline="82" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="LuminicBoxLayout.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="84" endline="84" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="LuminicBoxLayout.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/MathUtil.as">
      <violation beginline="238" endline="238" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="1">This parameter (acess) of this function is not used. </violation>
      <violation beginline="-1" endline="-1" begincolumn="-1" endcolumn="26" rule="adobe.ac.pmd.rules.naming.PackageCase" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="3">A package name should be lower case. Detects when a package definition contains upper case characters</violation>
      <violation beginline="27" endline="27" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="27" endline="27" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
      <violation beginline="81" endline="81" begincolumn="0" endcolumn="64" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="101" endline="101" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="112" endline="112" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="113" endline="113" begincolumn="0" endcolumn="22" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="154" endline="154" begincolumn="0" endcolumn="44" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="MathUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/MetaDataEvent.as">
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.media" class="MetaDataEvent.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
      <violation beginline="4" endline="4" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.media" class="MetaDataEvent.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/Metadata.as">
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.media" class="Metadata.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/Method.as">
      <violation beginline="29" endline="29" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Method.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (arguments). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/MethodExpert.as">
      <violation beginline="47" endline="47" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="MethodExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="51" endline="51" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="MethodExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="18" endline="18" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="MethodExpert.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="60" endline="60" begincolumn="0" endcolumn="63" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="MethodExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/reflect/MethodInfo.as">
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="MethodInfo.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aParameterList). </violation>
      <violation beginline="101" endline="101" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="MethodInfo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="93" endline="93" begincolumn="0" endcolumn="43" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="MethodInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="108" endline="108" begincolumn="0" endcolumn="40" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="MethodInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="109" endline="109" begincolumn="0" endcolumn="23" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils.reflect" class="MethodInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/model/Model.as">
      <violation beginline="85" endline="85" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.model" class="Model.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="90" endline="90" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.model" class="Model.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="28" endline="28" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.model" class="Model.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="40" endline="40" begincolumn="0" endcolumn="72" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.model" class="Model.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="44" endline="44" begincolumn="0" endcolumn="22" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.model" class="Model.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/model/ModelLocator.as">
      <violation beginline="109" endline="109" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="net.pixlib.model" class="ModelLocator.as" externalInfoUrl="" priority="3">This method is empty. This should be removed (toString). This function is not needed</violation>
      <violation beginline="119" endline="119" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.model" class="ModelLocator.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="124" endline="124" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.model" class="ModelLocator.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="99" endline="99" begincolumn="0" endcolumn="58" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.model" class="ModelLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/NetUtil.as">
      <violation beginline="134" endline="134" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="NetUtil.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 34 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="143" endline="143" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.utils" class="NetUtil.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="149" endline="149" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.utils" class="NetUtil.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="149" endline="149" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.utils" class="NetUtil.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="159" endline="159" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.utils" class="NetUtil.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="165" endline="165" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.utils" class="NetUtil.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/NullPlugin.as">
      <violation beginline="23" endline="23" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="NullPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="32" endline="32" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.plugin" class="NullPlugin.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 16 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="32" endline="32" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.plugin" class="NullPlugin.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 16 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="139" endline="139" begincolumn="0" endcolumn="59" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="NullPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="155" endline="155" begincolumn="0" endcolumn="63" rule="adobe.ac.pmd.rules.cairngorm.ReferenceModelLocatorOutsideTheMainApplication" ruleset="All Flex Rules" package="net.pixlib.plugin" class="NullPlugin.as" externalInfoUrl="" priority="3">The ModelLocator should be only accessible from the main application file. The ModelLocator should be only accessible from the main application file. Then sub-models should be injected to the nested views</violation>
      <violation beginline="179" endline="179" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.plugin" class="NullPlugin.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="181" endline="181" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.plugin" class="NullPlugin.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/NumberEvent.as">
      <violation beginline="40" endline="40" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="NumberEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="40" endline="40" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.events" class="NumberEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="28" endline="28" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="NumberEvent.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/ObjectEvent.as">
      <violation beginline="29" endline="29" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ObjectEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="41" endline="41" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ObjectEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="41" endline="41" begincolumn="74" endcolumn="74" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ObjectEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="52" endline="52" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ObjectEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="41" endline="41" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.events" class="ObjectEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="29" endline="29" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="ObjectEvent.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/ObjectIterator.as">
      <violation beginline="40" endline="40" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="ObjectIterator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="52" endline="52" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="ObjectIterator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="75" endline="75" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="ObjectIterator.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="41" endline="41" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.collections" class="ObjectIterator.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aKeys). </violation>
      <violation beginline="52" endline="52" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.collections" class="ObjectIterator.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="102" endline="102" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.collections" class="ObjectIterator.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="109" endline="109" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.collections" class="ObjectIterator.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/ObjectParser.as">
      <violation beginline="61" endline="61" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ObjectParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="100" endline="100" begincolumn="0" endcolumn="223" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ObjectParser.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 223 actually). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/ObjectUtils.as">
      <violation beginline="44" endline="44" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="44" endline="44" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="104" endline="104" begincolumn="77" endcolumn="77" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="104" endline="104" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="146" endline="146" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="148" endline="148" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.switchrules.SwitchStatementsShouldHaveDefault" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="1">A switch statement does not contain a default statement. Switch statements should have a default label in order to detect corner cases</violation>
      <violation beginline="120" endline="120" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="120" endline="120" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="164" endline="164" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="166" endline="166" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="60" endline="60" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="106" endline="106" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="107" endline="107" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="111" endline="111" begincolumn="0" endcolumn="28" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="ObjectUtils.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/Overloader.as">
      <violation beginline="128" endline="128" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="128" endline="128" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 32 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="40" endline="40" begincolumn="0" endcolumn="44" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="96" endline="96" begincolumn="0" endcolumn="44" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="115" endline="115" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="130" endline="130" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="131" endline="131" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="135" endline="135" begincolumn="0" endcolumn="52" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="146" endline="146" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="231" endline="231" begincolumn="0" endcolumn="28" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="235" endline="235" begincolumn="0" endcolumn="25" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="239" endline="239" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Overloader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/PalmerDebug.as">
      <violation beginline="28" endline="28" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">A constant field should be static (channel). </violation>
      <violation beginline="58" endline="58" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="58" endline="58" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="63" endline="63" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="63" endline="63" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="68" endline="68" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="68" endline="68" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="73" endline="73" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="73" endline="73" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="78" endline="78" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="78" endline="78" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="91" endline="91" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="91" endline="91" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="99" endline="99" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="99" endline="99" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="107" endline="107" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="107" endline="107" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="115" endline="115" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="115" endline="115" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="123" endline="123" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="123" endline="123" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="24" endline="24" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 17 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="24" endline="24" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 17 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="29" endline="29" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.AvoidProtectedFieldInFinalClass" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="3">Protected accessors are useless in a final class. Make it private (_bIsOn). </violation>
      <violation beginline="31" endline="31" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="33" endline="33" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerDebug.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/PalmerStringifier.as">
      <violation beginline="42" endline="42" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerStringifier.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="27" endline="27" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerStringifier.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="29" endline="29" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log" class="PalmerStringifier.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/ParserCommand.as">
      <violation beginline="30" endline="30" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory" class="ParserCommand.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/PathParser.as">
      <violation beginline="81" endline="81" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PathParser.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="160" endline="160" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PathParser.as" externalInfoUrl="" priority="1">This parameter (key) of this function is not used. </violation>
      <violation beginline="47" endline="47" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PathParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="130" endline="130" begincolumn="0" endcolumn="20" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PathParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/Plugin.as">
      <violation beginline="30" endline="30" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.plugin" class="Plugin.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/PluginBroadcaster.as">
      <violation beginline="31" endline="31" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="47" endline="47" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginBroadcaster.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="67" endline="67" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="67" endline="67" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="67" endline="67" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginBroadcaster.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="42" endline="42" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="43" endline="43" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginBroadcaster.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/PluginChannel.as">
      <violation beginline="30" endline="30" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginChannel.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="34" endline="34" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginChannel.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="28" endline="28" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginChannel.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/PluginDebug.as">
      <violation beginline="91" endline="91" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="91" endline="91" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="96" endline="96" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="96" endline="96" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="101" endline="101" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="101" endline="101" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="106" endline="106" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="106" endline="106" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="111" endline="111" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="111" endline="111" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 14 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="30" endline="30" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="3">If this field (isOn) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="37" endline="37" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="39" endline="39" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginDebug.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/plugin/PluginEvent.as">
      <violation beginline="32" endline="32" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.plugin" class="PluginEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/PluginExpert.as">
      <violation beginline="102" endline="102" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PluginExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="106" endline="106" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PluginExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/PreprocessorParser.as">
      <violation beginline="268" endline="268" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="306" endline="306" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="-1" endline="-1" begincolumn="-1" endcolumn="-1" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 16 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="258" endline="258" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 28 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="158" endline="158" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="189" endline="189" begincolumn="0" endcolumn="51" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="238" endline="238" begincolumn="0" endcolumn="82" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="248" endline="248" begincolumn="0" endcolumn="66" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="260" endline="260" begincolumn="0" endcolumn="54" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="268" endline="268" begincolumn="0" endcolumn="63" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="302" endline="302" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="306" endline="306" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="307" endline="307" begincolumn="0" endcolumn="116" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="PreprocessorParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/ProcessingHelper.as">
      <violation beginline="38" endline="38" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="54" endline="54" begincolumn="99" endcolumn="99" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="54" endline="54" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="68" endline="68" begincolumn="89" endcolumn="89" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="68" endline="68" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="77" endline="77" begincolumn="109" endcolumn="109" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="77" endline="77" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="111" endline="111" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="123" endline="123" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="144" endline="144" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="157" endline="157" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="54" endline="54" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="77" endline="77" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 29 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="77" endline="77" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="90" endline="90" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="90" endline="90" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="178" endline="178" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="180" endline="180" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="72" endline="72" begincolumn="0" endcolumn="212" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 212 actually). </violation>
      <violation beginline="81" endline="81" begincolumn="0" endcolumn="218" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ProcessingHelper.as" externalInfoUrl="" priority="5">Too long line (200 maximum, but 218 actually). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/Property.as">
      <violation beginline="24" endline="24" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Property.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="34" endline="34" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Property.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/PropertyEvent.as">
      <violation beginline="18" endline="18" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyEvent.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/PropertyExpert.as">
      <violation beginline="58" endline="58" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="63" endline="63" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="89" endline="89" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="50" endline="50" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="54" endline="54" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="106" endline="106" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="118" endline="118" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="18" endline="18" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="82" endline="82" begincolumn="0" endcolumn="17" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="83" endline="83" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="89" endline="89" begincolumn="0" endcolumn="21" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="96" endline="96" begincolumn="0" endcolumn="51" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="113" endline="113" begincolumn="0" endcolumn="78" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="125" endline="125" begincolumn="0" endcolumn="79" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="141" endline="141" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="PropertyExpert.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/Queue.as">
      <violation beginline="131" endline="131" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="206" endline="206" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="230" endline="230" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="398" endline="398" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="466" endline="466" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="572" endline="572" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="613" endline="613" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="625" endline="625" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="637" endline="637" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="739" endline="739" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="69" endline="69" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 20 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="69" endline="69" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 20 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="72" endline="72" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aQueue). </violation>
      <violation beginline="562" endline="562" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">This function is far too long (25 maximum, but 29 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="576" endline="576" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">This test contains a hard coded boolean value. You could remove it. </violation>
      <violation beginline="579" endline="579" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="579" endline="579" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="702" endline="702" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="709" endline="709" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="398" endline="398" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="466" endline="466" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="568" endline="568" begincolumn="0" endcolumn="21" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="811" endline="811" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="814" endline="814" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Queue.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/QueueLoader.as">
      <violation beginline="29" endline="29" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.load" class="QueueLoader.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="29" endline="29" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="QueueLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 19 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="110" endline="110" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.load" class="QueueLoader.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="32" endline="32" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="QueueLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="61" endline="61" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="QueueLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="62" endline="62" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.load" class="QueueLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/QueueLoaderEvent.as">
      <violation beginline="135" endline="135" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="QueueLoaderEvent.as" externalInfoUrl="" priority="3">This method is empty. This should be removed (getLoader). This function is not needed</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/Random.as">
      <violation beginline="231" endline="231" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="1">This parameter (access) of this function is not used. </violation>
      <violation beginline="235" endline="235" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="27" endline="27" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 14 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="55" endline="55" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (SPECIAL_CHARACTERS_TABLE). </violation>
      <violation beginline="198" endline="198" begincolumn="4" endcolumn="4" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="212" endline="212" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="3">This variable (template) seems to be incorrectly named. Let your creativity flow.. </violation>
      <violation beginline="142" endline="142" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.switchrules.TooFewBrancheInSwitchStatement" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="5">There are too few branches in this switch statement (3 minimum, but 2 actual). Switch statements are designed for complex branches, and allow branches to share treatment. Using a switch for only 2 branches is ill advised, as switches are not as easy to understand as if. In this case, it's most likely is a good idea to use a if statement</violation>
      <violation beginline="214" endline="214" begincolumn="0" endcolumn="51" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="Random.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/structures/Range.as">
      <violation beginline="27" endline="27" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="28" endline="28" begincolumn="0" endcolumn="40" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="29" endline="29" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="31" endline="31" begincolumn="0" endcolumn="47" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="32" endline="32" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="33" endline="33" begincolumn="0" endcolumn="47" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="87" endline="87" begincolumn="0" endcolumn="43" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="88" endline="88" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="89" endline="89" begincolumn="0" endcolumn="43" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="91" endline="91" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="92" endline="92" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="93" endline="93" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="108" endline="108" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="110" endline="110" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="111" endline="111" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="112" endline="112" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="113" endline="113" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="114" endline="114" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="130" endline="130" begincolumn="0" endcolumn="43" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="131" endline="131" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="132" endline="132" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="134" endline="134" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="135" endline="135" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.structures" class="Range.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/transitions/RealTimeBeacon.as">
      <violation beginline="157" endline="157" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.transitions" class="RealTimeBeacon.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="170" endline="170" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.transitions" class="RealTimeBeacon.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/RecordSet.as">
      <violation beginline="49" endline="49" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="RecordSet.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="55" endline="55" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="RecordSet.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="56" endline="56" begincolumn="0" endcolumn="21" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="RecordSet.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/Resource.as">
      <violation beginline="40" endline="40" begincolumn="0" endcolumn="25" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="Resource.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/assembler/locator/ResourceExpert.as">
      <violation beginline="69" endline="69" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ResourceExpert.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="73" endline="73" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.ioc.assembler.locator" class="ResourceExpert.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/ResourceParser.as">
      <violation beginline="48" endline="48" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="ResourceParser.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/load/RuntimeContextLoader.as">
      <violation beginline="185" endline="185" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="3">Long switch case detected (3 lines maximum, but 7 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="189" endline="189" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="189" endline="189" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
      <violation beginline="127" endline="127" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="145" endline="145" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="167" endline="167" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="168" endline="168" begincolumn="0" endcolumn="52" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="178" endline="178" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.switchrules.TooFewBrancheInSwitchStatement" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="5">There are too few branches in this switch statement (3 minimum, but 2 actual). Switch statements are designed for complex branches, and allow branches to share treatment. Using a switch for only 2 branches is ill advised, as switches are not as easy to understand as if. In this case, it's most likely is a good idea to use a if statement</violation>
      <violation beginline="185" endline="185" begincolumn="0" endcolumn="53" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.load" class="RuntimeContextLoader.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/Sequencer.as">
      <violation beginline="158" endline="158" begincolumn="0" endcolumn="37" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Sequencer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="159" endline="159" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Sequencer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="248" endline="248" begincolumn="0" endcolumn="49" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Sequencer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="425" endline="425" begincolumn="0" endcolumn="36" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Sequencer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="451" endline="451" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.commands" class="Sequencer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/commands/SequencerListener.as">
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.commands" class="SequencerListener.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/services/Service.as">
      <violation beginline="30" endline="30" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="Service.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="Service.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="36" endline="36" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="Service.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="41" endline="41" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="Service.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="42" endline="42" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="Service.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="44" endline="44" begincolumn="58" endcolumn="58" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="Service.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="27" endline="27" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.services" class="Service.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/services/ServiceLocator.as">
      <violation beginline="31" endline="31" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="ServiceLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="53" endline="53" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="ServiceLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="57" endline="57" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="ServiceLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="33" endline="33" begincolumn="0" endcolumn="114" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.services" class="ServiceLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="57" endline="57" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.services" class="ServiceLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/Set.as">
      <violation beginline="361" endline="361" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="576" endline="576" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="580" endline="580" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="583" endline="583" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="639" endline="639" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="646" endline="646" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="796" endline="796" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="1150" endline="1150" begincolumn="0" endcolumn="25" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="1153" endline="1153" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Set.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/encoding/ShaderDeserializer.as">
      <violation beginline="76" endline="76" begincolumn="105" endcolumn="105" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="ShaderDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="76" endline="76" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="ShaderDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="76" endline="76" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="ShaderDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="76" endline="76" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.encoding" class="ShaderDeserializer.as" externalInfoUrl="" priority="1">This parameter (target) of this function is not used. </violation>
      <violation beginline="20" endline="20" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.encoding" class="ShaderDeserializer.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="80" endline="80" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="ShaderDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/display/ShaderLocator.as">
      <violation beginline="77" endline="77" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.display" class="ShaderLocator.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="81" endline="81" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.display" class="ShaderLocator.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/services/SharedObjectService.as">
      <violation beginline="136" endline="136" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.services" class="SharedObjectService.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="116" endline="116" begincolumn="0" endcolumn="87" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.services" class="SharedObjectService.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="138" endline="138" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.services" class="SharedObjectService.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/SharedObjectUtils.as">
      <violation beginline="69" endline="69" begincolumn="133" endcolumn="133" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="SharedObjectUtils.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="104" endline="104" begincolumn="79" endcolumn="79" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.utils" class="SharedObjectUtils.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="44" endline="44" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.utils" class="SharedObjectUtils.as" externalInfoUrl="" priority="3">If this field (DEFAULT_ROOT_PATH) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="104" endline="104" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.utils" class="SharedObjectUtils.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="162" endline="162" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.utils" class="SharedObjectUtils.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="164" endline="164" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.utils" class="SharedObjectUtils.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/layout/SosMaxLayout.as">
      <violation beginline="64" endline="64" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="40" endline="40" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_aBuffer). </violation>
      <violation beginline="42" endline="42" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="3">If this field (IP) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="43" endline="43" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="3">If this field (PORT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="47" endline="47" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="49" endline="49" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="42" endline="42" begincolumn="0" endcolumn="48" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="106" endline="106" begincolumn="0" endcolumn="36" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="SosMaxLayout.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/SoundLoader.as">
      <violation beginline="19" endline="19" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="SoundLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/sound/SoundMetadata.as">
      <violation beginline="25" endline="25" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.DynamicClass" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundMetadata.as" externalInfoUrl="" priority="1">A class must not be dynamic. When using dynamic classes, you cannot control how the developer will use your class. It makes refactoring really difficult</violation>
      <violation beginline="53" endline="53" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundMetadata.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/SoundSWFLoader.as">
      <violation beginline="35" endline="35" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.load" class="SoundSWFLoader.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="20" endline="20" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="SoundSWFLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/sound/SoundStream.as">
      <violation beginline="47" endline="47" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundStream.as" externalInfoUrl="" priority="1">This parameter (value) of this function is not used. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/sound/SoundTransformInfo.as">
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundTransformInfo.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 15 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundTransformInfo.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 20 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundTransformInfo.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="59" endline="59" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundTransformInfo.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 4 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="125" endline="125" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundTransformInfo.as" externalInfoUrl="" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. </violation>
      <violation beginline="176" endline="176" begincolumn="0" endcolumn="52" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.sound" class="SoundTransformInfo.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/SoundURLLoader.as">
      <violation beginline="42" endline="42" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.load" class="SoundURLLoader.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="19" endline="19" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="SoundURLLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/strategy/SoundURLStrategy.as">
      <violation beginline="40" endline="40" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="SoundURLStrategy.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="123" endline="123" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="SoundURLStrategy.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="21" endline="21" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="SoundURLStrategy.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/Stack.as">
      <violation beginline="75" endline="75" begincolumn="0" endcolumn="36" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Stack.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="216" endline="216" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Stack.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="391" endline="391" begincolumn="0" endcolumn="29" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Stack.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="452" endline="452" begincolumn="0" endcolumn="21" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Stack.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="756" endline="756" begincolumn="0" endcolumn="41" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Stack.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="975" endline="975" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Stack.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="978" endline="978" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="Stack.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/StreamLoader.as">
      <violation beginline="19" endline="19" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="StreamLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/strategy/StreamLoaderStrategy.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="StreamLoaderStrategy.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="130" endline="130" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="StreamLoaderStrategy.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
      <violation beginline="19" endline="19" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="StreamLoaderStrategy.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/StringEvent.as">
      <violation beginline="40" endline="40" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="StringEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="40" endline="40" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.events" class="StringEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="28" endline="28" begincolumn="0" endcolumn="26" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="StringEvent.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/encoding/StringToXMLDeserializer.as">
      <violation beginline="47" endline="47" begincolumn="106" endcolumn="106" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="StringToXMLDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="47" endline="47" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="StringToXMLDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="47" endline="47" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.encoding" class="StringToXMLDeserializer.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="47" endline="47" begincolumn="84" endcolumn="84" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.encoding" class="StringToXMLDeserializer.as" externalInfoUrl="" priority="1">This parameter (key) of this function is not used. </violation>
      <violation beginline="47" endline="47" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.encoding" class="StringToXMLDeserializer.as" externalInfoUrl="" priority="1">This parameter (target) of this function is not used. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/StringUtil.as">
      <violation beginline="25" endline="25" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.utils" class="StringUtil.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 13 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="25" endline="25" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.utils" class="StringUtil.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="113" endline="113" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="net.pixlib.utils" class="StringUtil.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="79" endline="79" begincolumn="0" endcolumn="46" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="StringUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="80" endline="80" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="StringUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="102" endline="102" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="StringUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="142" endline="142" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="StringUtil.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/Stringifier.as">
      <violation beginline="36" endline="36" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.log" class="Stringifier.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/utils/SystemConfig.as">
      <violation beginline="37" endline="37" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.utils" class="SystemConfig.as" externalInfoUrl="" priority="3">If this field (OS_WINDOWS) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="44" endline="44" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.utils" class="SystemConfig.as" externalInfoUrl="" priority="3">If this field (OS_MAC) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="51" endline="51" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.utils" class="SystemConfig.as" externalInfoUrl="" priority="3">If this field (OS_LINUX) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="286" endline="286" begincolumn="0" endcolumn="52" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="SystemConfig.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="287" endline="287" begincolumn="0" endcolumn="36" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.utils" class="SystemConfig.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/transitions/TickEvent.as">
      <violation beginline="28" endline="28" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="net.pixlib.transitions" class="TickEvent.as" externalInfoUrl="" priority="3">No public variables should be inside a custom event. This variable (bias) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
      <violation beginline="29" endline="29" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="net.pixlib.transitions" class="TickEvent.as" externalInfoUrl="" priority="3">No public variables should be inside a custom event. This variable (biasInSeconds) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/log/layout/TraceLayout.as">
      <violation beginline="66" endline="66" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="TraceLayout.as" externalInfoUrl="" priority="1">A constant field should be static (DEBUG_PREFIX). </violation>
      <violation beginline="67" endline="67" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="TraceLayout.as" externalInfoUrl="" priority="1">A constant field should be static (INFO_PREFIX). </violation>
      <violation beginline="68" endline="68" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="TraceLayout.as" externalInfoUrl="" priority="1">A constant field should be static (WARN_PREFIX). </violation>
      <violation beginline="69" endline="69" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="TraceLayout.as" externalInfoUrl="" priority="1">A constant field should be static (ERROR_PREFIX). </violation>
      <violation beginline="70" endline="70" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="TraceLayout.as" externalInfoUrl="" priority="1">A constant field should be static (FATAL_PREFIX). </violation>
      <violation beginline="124" endline="124" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="TraceLayout.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="126" endline="126" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.log.layout" class="TraceLayout.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/TypedContainer.as">
      <violation beginline="58" endline="58" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="TypedContainer.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/TypedFactoryLocator.as">
      <violation beginline="33" endline="33" begincolumn="53" endcolumn="53" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="TypedFactoryLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="70" endline="70" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.core" class="TypedFactoryLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/strategy/URLLoaderStrategy.as">
      <violation beginline="67" endline="67" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="URLLoaderStrategy.as" externalInfoUrl="" priority="1">This parameter (context) of this function is not used. </violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="URLLoaderStrategy.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 14 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="111" endline="111" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="net.pixlib.load.strategy" class="URLLoaderStrategy.as" externalInfoUrl="" priority="3">This catch statement is empty. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/events/ValueObjectEvent.as">
      <violation beginline="43" endline="43" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.events" class="ValueObjectEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="43" endline="43" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="net.pixlib.events" class="ValueObjectEvent.as" externalInfoUrl="" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="31" endline="31" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.events" class="ValueObjectEvent.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/VarParser.as">
      <violation beginline="20" endline="20" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="VarParser.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/video/VideoImageDataEvent.as">
      <violation beginline="37" endline="37" begincolumn="83" endcolumn="83" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoImageDataEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="45" endline="45" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoImageDataEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/VideoLoader.as">
      <violation beginline="-1" endline="-1" begincolumn="-1" endcolumn="-1" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 16 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="68" endline="68" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 22 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="68" endline="68" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="89" endline="89" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="3">If this field (DEBUG) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="370" endline="370" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="3">This method is too complex. Maximum complexity is 10, but its cyclomatic complexity was 11. </violation>
      <violation beginline="388" endline="388" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="3">Long switch case detected (3 lines maximum, but 10 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="400" endline="400" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="3">Long switch case detected (3 lines maximum, but 4 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="21" endline="21" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
      <violation beginline="22" endline="22" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="net.pixlib.load" class="VideoLoader.as" externalInfoUrl="" priority="5">Imports from the same package are not necessary. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/video/VideoMetadata.as">
      <violation beginline="25" endline="25" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.DynamicClass" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoMetadata.as" externalInfoUrl="" priority="1">A class must not be dynamic. When using dynamic classes, you cannot control how the developer will use your class. It makes refactoring really difficult</violation>
      <violation beginline="159" endline="159" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoMetadata.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="25" endline="25" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoMetadata.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 16 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="25" endline="25" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoMetadata.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 15 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="31" endline="31" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoMetadata.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (aCuePoints). </violation>
      <violation beginline="101" endline="101" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoMetadata.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (seekpoints). </violation>
      <violation beginline="106" endline="106" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoMetadata.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (trackinfo). </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/video/VideoStream.as">
      <violation beginline="335" endline="335" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoStream.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="481" endline="481" begincolumn="0" endcolumn="37" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoStream.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="523" endline="523" begincolumn="0" endcolumn="40" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoStream.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/media/video/VideoTextDataEvent.as">
      <violation beginline="37" endline="37" begincolumn="82" endcolumn="82" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoTextDataEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="45" endline="45" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.media.video" class="VideoTextDataEvent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/view/View.as">
      <violation beginline="133" endline="133" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.view" class="View.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="138" endline="138" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.view" class="View.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.view" class="View.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 18 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/view/ViewLocator.as">
      <violation beginline="99" endline="99" begincolumn="52" endcolumn="52" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.view" class="ViewLocator.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="101" endline="101" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.view" class="ViewLocator.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="104" endline="104" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.view" class="ViewLocator.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="125" endline="125" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="net.pixlib.view" class="ViewLocator.as" externalInfoUrl="" priority="3">This method is empty. This should be removed (toString). This function is not needed</violation>
      <violation beginline="136" endline="136" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.view" class="ViewLocator.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="141" endline="141" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="net.pixlib.view" class="ViewLocator.as" externalInfoUrl="" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="115" endline="115" begincolumn="0" endcolumn="58" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.view" class="ViewLocator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/WeakCollection.as">
      <violation beginline="103" endline="103" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="157" endline="157" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="237" endline="237" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="356" endline="356" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="383" endline="383" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="3">Too much public fields or functions detected (10 maximum, but 13 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="53" endline="53" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 4 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible</violation>
      <violation beginline="45" endline="45" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="59" endline="59" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="130" endline="130" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="131" endline="131" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="185" endline="185" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="297" endline="297" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="298" endline="298" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="351" endline="351" begincolumn="0" endcolumn="27" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="352" endline="352" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="356" endline="356" begincolumn="0" endcolumn="30" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="382" endline="382" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="409" endline="409" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="412" endline="412" begincolumn="0" endcolumn="24" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.collections" class="WeakCollection.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/collections/XMLListIterator.as">
      <violation beginline="64" endline="64" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.collections" class="XMLListIterator.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/XMLParser.as">
      <violation beginline="34" endline="34" begincolumn="53" endcolumn="53" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="XMLParser.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/encoding/XMLToObjectDeserializer.as">
      <violation beginline="40" endline="40" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="41" endline="41" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="155" endline="155" begincolumn="0" endcolumn="40" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="175" endline="175" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="189" endline="189" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="191" endline="191" begincolumn="0" endcolumn="34" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="192" endline="192" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="196" endline="196" begincolumn="0" endcolumn="39" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="237" endline="237" begincolumn="0" endcolumn="66" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="249" endline="249" begincolumn="0" endcolumn="20" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="341" endline="341" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="344" endline="344" begincolumn="0" endcolumn="77" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="367" endline="367" begincolumn="0" endcolumn="28" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="369" endline="369" begincolumn="0" endcolumn="31" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="376" endline="376" begincolumn="0" endcolumn="28" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="377" endline="377" begincolumn="0" endcolumn="33" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="378" endline="378" begincolumn="0" endcolumn="32" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="379" endline="379" begincolumn="0" endcolumn="20" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="380" endline="380" begincolumn="0" endcolumn="25" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="384" endline="384" begincolumn="0" endcolumn="42" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.encoding" class="XMLToObjectDeserializer.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/ioc/parser/factory/xml/XMLUtils.as">
      <violation beginline="60" endline="60" begincolumn="64" endcolumn="64" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="XMLUtils.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="63" endline="63" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="XMLUtils.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="XMLUtils.as" externalInfoUrl="" priority="5">The copyright header is missing in this file. </violation>
      <violation beginline="27" endline="27" begincolumn="0" endcolumn="50" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="XMLUtils.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="62" endline="62" begincolumn="0" endcolumn="38" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="XMLUtils.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="63" endline="63" begincolumn="0" endcolumn="23" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="All Flex Rules" package="net.pixlib.ioc.parser.factory.xml" class="XMLUtils.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/palmer_CSSLoader.as">
      <violation beginline="1" endline="34" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.load" class="palmer_CSSLoader.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/palmer_FileLoader.as">
      <violation beginline="1" endline="34" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.load" class="palmer_FileLoader.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/palmer_GraphicLoader.as">
      <violation beginline="1" endline="34" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.load" class="palmer_GraphicLoader.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/palmer_SoundLoader.as">
      <violation beginline="1" endline="34" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.load" class="palmer_SoundLoader.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/palmer_StreamLoader.as">
      <violation beginline="1" endline="34" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.load" class="palmer_StreamLoader.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/palmer_VideoLoader.as">
      <violation beginline="1" endline="35" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.load" class="palmer_VideoLoader.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/load/palmer_XMLLoader.as">
      <violation beginline="1" endline="34" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.load" class="palmer_XMLLoader.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
   <file name="Users/francisbourre/Documents/Workspace/Palmer/src/net/pixlib/core/palmer_internal.as">
      <violation beginline="1" endline="25" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.naming.UncorrectClassCase" ruleset="All Flex Rules" package="net.pixlib.core" class="palmer_internal.as" externalInfoUrl="" priority="3">A class name must start by a majuscule character. </violation>
   </file>
</pmd>
